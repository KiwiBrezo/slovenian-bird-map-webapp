user.register.new=insert into "SBM-app".users("name", "surname", "email", "password", "mobile_token") \
  values(:name, :surname, :email, :password, :mobile_token);
user.register.check.email.exists=select exists (\
  select 1 from "SBM-app".users \
    where "email" = :email limit 1);
user.login.webapp=select \
  (case when "password" = :password then true else false end) as result_output \
  from "SBM-app".users \
  where "email" = :email;
user.login.webapp.role=select "role" from "SBM-app".users where "email" = :email;
user.get.name=select name from "SBM-app".users where email = :email;
user.get.userID=select user_id from "SBM-app".users where email = :email;
user.check.user.mobile.token=select \
  (case when mobile_token = :token then true else false end) as result_output \
  from "SBM-app".users \
  where user_id = :id;
user.get.number.of.all.observations=select \
  count(o.observation_id) as number_of_observations \
  from "SBM-app".observations o \
  where o.user_id = :id;
user.get.number.of.all.observations.year=select \
  count(o.observation_id) as number_of_observations \
  from "SBM-app".observations o \
  where o.user_id = :id \
  and o."date" > :startOfYear \
  and o."date" < :endOfYear;
user.get.name.surname=select u."name", u.surname \
  from "SBM-app".users u \
  where u.user_id = :userId;
